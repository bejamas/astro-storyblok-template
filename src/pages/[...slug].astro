---
import { useStoryblokApi } from '@storyblok/astro'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import Layout from '../layouts/Layout.astro'
import parseUrl from '../utils/parseUrl'
import isPreview from '../utils/isPreview'
import generateStaticPaths from '../utils/generateStaticPaths'
import * as locales from '../locales'

export async function getStaticPaths() {
  return await generateStaticPaths()
}

const params = Astro.params

let props = isPreview() ? parseUrl(params.slug) : Astro.props

const { slug, language, langSwitch } = props

const translate = locales[language] || locales.en

const storyblokApi = useStoryblokApi()

const { data } = await storyblokApi.get(
  `cdn/stories/${slug === undefined ? 'home' : slug}`,
  {
    version: isPreview() ? 'draft' : 'published',
    resolve_relations: ['reports_section.reports'],
    language,
  }
)
const story = data.story


const { data: settingsData } = await storyblokApi.get(
  `cdn/stories/settings/site-settings/`,
  {
    version: isPreview() ? 'draft' : 'published',
    language,
  }
)
const siteSettings  = settingsData.story
---

<Layout blok={story.content} siteSettings={siteSettings.content} langSwitch={langSwitch} language={language} translate={translate}>
  <StoryblokComponent blok={story.content} language={language} translate={translate}  />
</Layout>
